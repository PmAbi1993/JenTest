name: iOS CI (download runtime if missing)

on:
  push:
    branches: [ main, develop, 'feature/**' ]
  pull_request:
    branches: [ main, develop ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-test:
    runs-on: macos-14   # or macos-15 ‚Äî works on both
    timeout-minutes: 75
    env:
      SCHEME: JenTest
      DEVICE_MODEL: "iPhone 15"

    steps:
      - uses: actions/checkout@v4

      - uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '16.2'

      - name: Ensure iOS runtime is present (download + register only if missing)
        run: |
          set -euo pipefail
          if xcrun simctl list runtimes | grep -q "iOS"; then
            echo "‚úÖ iOS runtime already installed"
          else
            echo "üîß Downloading iOS runtime‚Ä¶"
            sudo xcodebuild -license accept >/dev/null
            sudo xcodebuild -downloadPlatform iOS
            sudo xcodebuild -runFirstLaunch
            xcrun simctl list runtimes | grep iOS || { echo "‚ùå Runtime still missing"; exit 1; }
          fi

      - id: sim
        name: Launch simulator
        uses: futureware-tech/simulator-action@v4
        with:
          model: ${{ env.DEVICE_MODEL }}
          wait_for_boot: true
          erase_before_boot: true

      - name: Build & Test
        working-directory: ${{ github.workspace }}
        shell: bash
        run: |
          set -euo pipefail

          echo "PWD: $(pwd)"
          echo "Repo root contents:" && ls -la

          DEST="id=${{ steps.sim.outputs.udid }}"
          ROOT="${GITHUB_WORKSPACE:-$PWD}"

          # Find workspace or project using absolute paths (max depth 2 covers common layouts)
          WS=$(find "$ROOT" -maxdepth 2 -type d -name "*.xcworkspace" -not -path "*/.xcodeproj/*" -print -quit || true)
          PROJ=$(find "$ROOT" -maxdepth 2 -type d -name "*.xcodeproj" -print -quit || true)

          if [ -z "${WS}" ] && [ -z "${PROJ}" ]; then
            echo "‚ùå No .xcworkspace or .xcodeproj found under $ROOT" >&2
            echo "Tree (depth 2):" && find "$ROOT" -maxdepth 2 -print
            exit 66
          fi

          if command -v xcpretty >/dev/null; then
            if [ -n "${WS}" ]; then
              echo "‚û°Ô∏è Using workspace: ${WS}"
              xcodebuild -workspace "${WS}" -scheme "$SCHEME" -destination "$DEST" test | xcpretty --test --color
            else
              echo "‚û°Ô∏è Using project: ${PROJ}"
              xcodebuild -project "${PROJ}" -scheme "$SCHEME" -destination "$DEST" test | xcpretty --test --color
            fi
          else
            if [ -n "${WS}" ]; then
              echo "‚û°Ô∏è Using workspace: ${WS}"
              xcodebuild -workspace "${WS}" -scheme "$SCHEME" -destination "$DEST" test
            else
              echo "‚û°Ô∏è Using project: ${PROJ}"
              xcodebuild -project "${PROJ}" -scheme "$SCHEME" -destination "$DEST" test
            fi
          fi

      - name: Debug info (only on failure)
        if: failure()
        run: |
          xcrun simctl list devices
          xcrun simctl list runtimes